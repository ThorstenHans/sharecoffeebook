#ShareCoffee.REST

Finally SharePoint 2013 is offering a OData conform REST API, which enables developers to use OData url query operations in order to directly access data from SharePoint.

As mentioned in Chapter 2, there are many different ways how REST queries have to be executed depending on the current context. This fact was a little bit frustrating when diging into SharePoint App Development.

ShareCoffee is providing a clean, fluent API for building REST queries. `ShareCoffee.REST.build` is the global entry-point for creating REST properties. Depending on your intent, you can choose one of the following operations

  * Create
  * Read
  * Update
  * Delete

which are reflecting the famous CRUD operations. 

    ShareCoffee.REST.build.create
    ShareCoffee.REST.build.read
    ShareCoffee.REST.build.update
    ShareCoffee.REST.build.delete


In order to support all the following JavaScript frameworks

  * jQuery
  * AngularJS
  * reqwest

You've to specify which framework you're currently using, prefixed by the `for` property

    // AngularJS samples
    ShareCoffee.REST.build.create.for.angularJS()
    ShareCoffee.REST.build.read.for.angularJS()
    ShareCoffee.REST.build.update.for.angularJS()
    ShareCoffee.REST.build.delete.for.angularJS()

    // jQuery samples
    ShareCoffee.REST.build.create.for.jQuery()
    ShareCoffee.REST.build.read.for.jQuery()
    ShareCoffee.REST.build.update.for.jQuery()
    ShareCoffee.REST.build.delete.for.jQuery()

    // reqwest samples
    ShareCoffee.REST.build.create.for.reqwest()
    ShareCoffee.REST.build.read.for.reqwest()
    ShareCoffee.REST.build.update.for.reqwest()
    ShareCoffee.REST.build.delete.for.reqwest()

T> ## IE 8 workaround
T> IE8 is supported by SharePoint 2013 OnPremise, if you're targeting this browser, you've to replace the **for** property by the **f** shorthand.
T> IE9 is not able to execute a function or access a proprety called **for**

